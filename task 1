-- Step 0: Drop tables if they exist (for re-run safety)
DROP TABLE IF EXISTS appointments;
DROP TABLE IF EXISTS patients;

-- Step 1: Create patients table
CREATE TABLE patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(100)
);

-- Step 2: Insert patients data
INSERT INTO patients VALUES
(1, 'Arjun'),
(2, 'Sneha'),
(3, 'Kabir'),
(4, 'Megha');

-- Step 3: Create appointments table
CREATE TABLE appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_name VARCHAR(100),
    appointment_date DATE
);

-- Step 4: Insert appointments data
INSERT INTO appointments VALUES
(101, 1, 'Dr. Rao', '2024-06-01'),
(102, 2, 'Dr. Sen', '2024-06-03'),
(103, 5, 'Dr. Nair', '2024-06-05'); -- patient_id 5 does not exist

-- Step 5: INNER JOIN
SELECT 
    p.patient_name, 
    a.doctor_name, 
    a.appointment_date
FROM 
    patients p
INNER JOIN 
    appointments a ON p.patient_id = a.patient_id;

-- Step 6: LEFT JOIN
SELECT 
    p.patient_name, 
    a.doctor_name, 
    a.appointment_date
FROM 
    patients p
LEFT JOIN 
    appointments a ON p.patient_id = a.patient_id;

-- Step 7: RIGHT JOIN (works in MySQL/PostgreSQL)
SELECT 
    p.patient_name, 
    a.doctor_name, 
    a.appointment_date
FROM 
    patients p
RIGHT JOIN 
    appointments a ON p.patient_id = a.patient_id;

-- Step 8: FULL OUTER JOIN (works in PostgreSQL only)
-- If using MySQL, use UNION workaround instead

-- PostgreSQL version:
SELECT 
    p.patient_name, 
    a.doctor_name, 
    a.appointment_date
FROM 
    patients p
FULL OUTER JOIN 
    appointments a ON p.patient_id = a.patient_id;

-- OR: MySQL-compatible FULL OUTER JOIN alternative
-- Uncomment below if using MySQL instead of PostgreSQL
/*
SELECT 
    p.patient_name, 
    a.doctor_name, 
    a.appointment_date
FROM 
    patients p
LEFT JOIN 
    appointments a ON p.patient_id = a.patient_id

UNION

SELECT 
    p.patient_name, 
    a.doctor_name, 
    a.appointment_date
FROM 
    appointments a
LEFT JOIN 
    patients p ON p.patient_id = a.patient_id;
*/
